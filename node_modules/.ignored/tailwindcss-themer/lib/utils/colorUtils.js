"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isColor = exports.withOpacity = exports.toRgb = void 0;
const tslib_1 = require("tslib");
const color_1 = tslib_1.__importDefault(require("color"));
/**
 * @param value - a color represented as a string (hex, rgb, rgba, hsl, hsla, etc)
 * @return the color represented as its rgb values with alpha channel stripped
 */
const toRgb = (value) => {
    const [r, g, b] = (0, color_1.default)(value).rgb().array();
    return `${r}, ${g}, ${b}`;
};
exports.toRgb = toRgb;
/**
 * @param customPropName - a custom prop to configure with opacity
 * @return the variable configured with opacity
 */
const withOpacity = (customPropName) => ({ opacityVariable, opacityValue }) => {
    if (opacityValue !== undefined) {
        return `rgba(var(${customPropName}), ${opacityValue})`;
    }
    if (opacityVariable !== undefined) {
        return `rgba(var(${customPropName}), var(${opacityVariable}, 1))`;
    }
    return `rgb(var(${customPropName}))`;
};
exports.withOpacity = withOpacity;
/**
 * @param value - the value to test if it is a valid color string
 * @return whether the value passed in is a valid color string
 */
const isColor = (value) => {
    if (typeof value === 'number') {
        return false;
    }
    try {
        (0, color_1.default)(value);
        return true;
    }
    catch (_a) {
        return false;
    }
};
exports.isColor = isColor;
