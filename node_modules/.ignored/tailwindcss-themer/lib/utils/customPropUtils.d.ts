import { withOpacity } from './colorUtils';
/**
 * @param value - a custom prop value
 * @return the value converted to a string of its rgb components comma separated if it is a color else it returns the value unaltered
 */
export declare const toCustomPropValue: (value: string | number) => string;
/**
 * @param valuePath - the path to get to the value
 * @return valuePath concatenated as a kebab cased custom property
 */
export declare const toCustomPropName: (valuePath: string[]) => string;
/**
 * @param value - the value of the custom prop to generate
 * @param valuePath - the path to get to the value
 * @return a normal custom prop generated from valuePath if the value is not a color else it is a function that generates custom prop configured with opacity when called with opacity configuration
 */
export declare const asCustomProp: (value: string | number, valuePath: string[]) => string | ReturnType<typeof withOpacity>;
